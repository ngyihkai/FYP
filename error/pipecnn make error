g++   ./host/main.o ../common/ocl_util.o ../common/timer.o -o run.exe -L/home/imeynyk/intelFPGA/18.1/hld/board/terasic/de1_soc/arm32/lib -L/home/imeynyk/intelFPGA/18.1/hld/host/arm32/lib -L/home/imeynyk/intelFPGA/18.1/hld/host/linux64/lib -Wl,--no-as-needed -lalteracl -lintel_soc32_mmd -lstdc++ -lelf 
/usr/bin/ld: skipping incompatible /home/imeynyk/intelFPGA/18.1/hld/host/arm32/lib/libalteracl.so when searching for -lalteracl
/usr/bin/ld: skipping incompatible /home/imeynyk/intelFPGA/18.1/hld/board/terasic/de1_soc/arm32/lib/libintel_soc32_mmd.so when searching for -lintel_soc32_mmd
/usr/bin/ld: cannot find -lintel_soc32_mmd
/usr/bin/ld: skipping incompatible /home/imeynyk/intelFPGA/18.1/hld/host/arm32/lib/libelf.so when searching for -lelf
collect2: error: ld returned 1 exit status
Makefile:168: recipe for target 'run.exe' failed
make: *** [run.exe] Error 1

libalteracl.so
libintel_soc32_mmd.so
libelf.so

### .so file is what	###
An .so file is a compiled library file. It stands for "Shared Object" and is analogous to a Windows DLL.

method:
1. make clean and rerun (x)
2. install newer version of altera quartus, sdk...
3. chk g++ 64/32 bit (https://blog.csdn.net/xxm524/article/details/45840679?spm=1001.2101.3001.6650.2&utm_medium=distribute.pc_relevant.none-task-blog-2%7Edefault%7ECTRLIST%7ERate-2-45840679-blog-105554534.pc_relevant_antiscanv3&depth_1-utm_source=distribute.pc_relevant.none-task-blog-2%7Edefault%7ECTRLIST%7ERate-2-45840679-blog-105554534.pc_relevant_antiscanv3&utm_relevant_index=5)
4. chk and change cross-compiler and cxx:
	arm-linux-gnueabihf-
	arm-linux-gnueabihf-gcc
	g++			(x)
5. 	cd /intelFPGA/18.1/hld/host/arm32/lib
	objdump -p libalteracl.so
	cd intelFPGA/18.1/hld/board/terasic/de1_soc/arm32/lib
	objdump -p libintel_soc32_mmd.so
	objdump -p lintel_soc32_mmd
	objdump -p libelf.so
6.  uname -m --> x86_64
	gcc -v --> x86_64-linux-gnu
	x86-32bit
	arm32-32bit
7. 	change x86 --> x86_64, x86_32 but useless
 	gcc -m32 libalteracl.so -o libalteracl
 	gcc -m32 lintel_soc32_mmd -o libalteracl lintel_soc32_mmd
	gcc -m32 libelf.so -o  libelf.so
8. 	https://stackoverflow.com/questions/22099328/using-32bit-so-file-in-a-64bit-environment
	https://stackoverflow.com/questions/1272357/how-to-compile-a-32-bit-binary-on-a-64-bit-linux-machine-with-gcc-cmake
	CXX :=g++ --> -m32


make clean
make all
make test
make runtest
make pycaffe
make all matcaffe
make mattest
sudo gedit ~/.bashrc
export PYTHONPATH=/home/user/imeynyk/Downloads/caffee/python:$PYTHONPATH
export MATLABPATH=/home/user/imeynyk/Downloads/caffee/matlab:$MATLABPATH


##      activate matlab         ##
After successful building and testing, add this package to Matlab search PATH by 
starting matlab from caffe root folder and running the following commands in Matlab command window.
cd Downloads/caffee
sudo /usr/local/MATLAB/R2018a/bin/matlab
addpath ./matlab
savepath ./matlab

##	make all matcaffe error 	##
The version currently supported with MEX is '6.3.x'. For a list of currently supported compilers see: https://www.mathworks.com/support/compilers/current_release.


http://wei48221.blogspot.com/2017/08/linux-how-to-solve-problem-of-usrbinld.html

##	check source code bit and ubuntu bit 	##
#https://blog.csdn.net/KgdYsg/article/details/78769302#
#https://blog.csdn.net/xiuzhentianting/article/details/48339787?spm=1001.2101.3001.6661.1&utm_medium=distribute.pc_relevant_t0.none-task-blog-2%7Edefault%7ECTRLIST%7Edefault-1-48339787-blog-75535955.pc_relevant_default&depth_1-utm_source=distribute.pc_relevant_t0.none-task-blog-2%7Edefault%7ECTRLIST%7Edefault-1-48339787-blog-75535955.pc_relevant_default&utm_relevant_index=1
host architecture=x86_64 --> 64-bit version of the x86 instruction set (uname -m)
ARM and x86 are for 32-bit processors
arm64 and x86_64 are for 64-bit
file libalteracl.so --> 32bit 	ELF 32-bit LSB shared object, ARM
ldd libalteracl.so
file libintel_soc32_mmd.so --> 32bit ELF 32-bit LSB shared object, ARM
file libelf.so --> 32bit ELF 32-bit LSB shared object, ARM



##		cross-compiler (gcc and g++)		##   --> (x)
1. 	sudo apt-get install gcc-arm-linux-gnueabihf
	arm-linux-gnueabihf-gcc
2. 	sudo apt-get update
	sudo apt-get install g++-arm-linux-gnueabihf
	arm-linux-gnueabihf-g++

##		update gcc and g++ 		##
sudo add-apt-repository -y ppa:ubuntu-toolchain-r/test

sudo apt-get update
sudo apt-get install gcc-6 g++-6
sudo update-alternatives --install /usr/bin/gcc gcc /usr/bin/gcc-6 20 --slave /usr/bin/g++ g++ /usr/bin/g++-6
gcc --version 	--> 6.5.0 
g++ --version	--> 6.5.0

sudo dpkg --add-architecture i386
sudo apt install libc6:i386

#	rtl_lib.h not found		#
copy rtl_lib.h from RTL folder to current directory
#	__attribute__((max_work_group_size(1,1,LRN_MAX_LOCAL_SIZE))) // (x,y,z) #
conv_pipe.log

#	/home/imeynyk/PipeCNN/project_intel/device/conv_pipe.cl:1123:16: error: attribute takes one argument	#
https://github.com/doonny/PipeCNN/issues/133
__attribute__((max_work_group_size(1,1,LRN_MAX_LOCAL_SIZE))) // (x,y,z)
change to
__attribute__((max_work_group_size(LRN_MAX_LOCAL_SIZE))) // (x,y,z)

#	/home/imeynyk/PipeCNN/project_intel/device/conv_pipe.cl:96: Compiler Error: undefined reference to 'mult_add_fix8bx4' 	#
Error: Optimizer FAILED.
copy and paste the new makefile


//#include "mult_add_fix8bx4.bsf"
//#include "mult_add_fix8bx4.v"
//#include "mult_add_fix8bx4_0002.v"
//#include ../device/RTL/mult_add_fix8bx4
//#include home/imeynyk/PipeCNN/project_intel/device/RTL/mult_add_fix8bx4
#pragma comment(mult_add_fix8bx4, "home/imeynyk/PipeCNN/project_intel/device/RTL/mult_add_fix8bx4")
#pragma comment(mult_add_fix8bx4, "home/imeynyk/PipeCNN/project_intel/mult_add_fix8bx4")
#pragma comment(mult_add_fix8bx4, "mult_add_fix8bx4")


Makefile:132: recipe for target 'host/main.o' failed
make: [host/main.o] Error 127 (ignored)
Makefile:132: recipe for target '../common/ocl_util.o' failed
make: [../common/ocl_util.o] Error 127 (ignored)
Makefile:132: recipe for target '../common/timer.o' failed
make: [../common/timer.o] Error 127 (ignored)

#	 multiple g++ method	#
https://services.dartmouth.edu/TDClient/1806/Portal/KB/ArticleDet?ID=64643
g++ -m32, gcc -m32
sudo apt install gcc-multilib
sudo apt install g++-multilib
sudo apt-get install gcc-6.5-multilib g++-6.5-multilib

#	g++ with wrong method	#
 #include <bits/c++config.h> error
g++-6.5 --> make: g++-6.5: Command not found
g++ -6.5 --> g++: error: unrecognized command line option ‘-6.5’
sudo apt-get install gcc-4.8-multilib g++-4.8-multilib

HOST_SRCS = ./host/main.cpp ../common/ocl_util.cpp ../common/timer.cpp
HOST_SRCS = home/imeynyk/PipeCNN/project_intel/host/main.cpp home/imeynyk/PipeCNN/project_intel/common/ocl_util.cpp home/imeynyk/PipeCNN/project_intel/common/timer.cpp
HOST_SRCS = imeynyk/PipeCNN/project_intel/host/main.cpp imeynyk/PipeCNN/project_intel/common/ocl_util.cpp imeynyk/PipeCNN/project_intel/common/timer.cpp
HOST_SRCS = PipeCNN/project_intel/host/main.cpp PipeCNN/project_intel/common/ocl_util.cpp PipeCNN/project_intel/common/timer.cpp
HOST_SRCS = host/main.cpp common/ocl_util.cpp common/timer.cpp
HOST_SRCS = /host/main.cpp /common/ocl_util.cpp /common/timer.cpp

sudo apt-get update
sudo apt-get install g++-arm-linux-gnueabihf

#	check exist of g++ and gcc arm #
dpkg -L g++-arm-linux-gnueabi
dpkg -L gcc-arm-linux-gnueabihf
dpkg -L g++-arm-linux-gnueabihf --> /usr/bin/arm-linux-gnueabihf-g++

#	location of error code 	#
libalteracl.so -->  /intelFPGA/18.1/hld/host/linux64/lib
libintel_soc32_mmd.so --> 32bit file
libelf.so -->  /intelFPGA/18.1/hld/host/linux64/lib

# 	check pc determine and set the build and host architecture for package building #
https://www.unixmen.com/enable-32-bit-support-64-bit-ubuntu-13-10-greater/
dpkg --print-architecture --> amd64
dpkg --print-foreign-architectures --> i386 (installed 32-bit support for your 64-bit system.)


#	bits/c++config.h: No such file or directory	#
sudo update-alternatives --install /usr/bin/gcc gcc /usr/bin/gcc-4.8 1
sudo update-alternatives --install /usr/bin/gcc gcc /usr/bin/gcc-5 2
sudo update-alternatives --install /usr/bin/gcc gcc /usr/bin/gcc-6 3

sudo update-alternatives --install /usr/bin/g++ g++ /usr/bin/g++-4.8 1
sudo update-alternatives --install /usr/bin/g++ g++ /usr/bin/g++-5 2
sudo update-alternatives --install /usr/bin/g++ g++ /usr/bin/g++-6 3


sudo update-alternatives --config gcc
sudo update-alternatives --config g++
gcc --version
g++ --version

#	/usr/include/linux/errno.h:1:23: fatal error: asm/errno.h: No such file or directory	#
https://stackoverflow.com/questions/14795608/asm-errno-h-no-such-file-or-directory
sudo ln -s /usr/include/x86_64-linux-gnu/asm /usr/include/asm

#	bash: ./boardtest_host: cannot execute binary file: Exec format error 	#
sudo apt install binfmt-support qemu qemu-user-static
sudo ln -s /usr/arm-linux-gnueabihf/lib/ld-linux-armhf.so.3 /usr/lib/ld-linux-armhf.so.3 
arm-linux-gnueabihf-g++ -static -o name program.s
qemu-arm name

# 	host/layer_config.h:1152:1: error: narrowing conversion of ‘-4’ from ‘int’ to ‘char’ inside { } [-Wnarrowing] 	#
replace -4 with 0 for line 1152 in layer_config.h
